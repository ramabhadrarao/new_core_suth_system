<!-- views/dashboard/index.ejs - Main dashboard page -->
<%- include('../layout', { 
  body: `
    <div class="row row-deck row-cards">
      <!-- Statistics Cards -->
      <div class="col-12">
        <div class="row row-cards">
          <div class="col-sm-6 col-lg-3">
            <div class="card card-sm">
              <div class="card-body">
                <div class="row align-items-center">
                  <div class="col-auto">
                    <span class="bg-primary text-white avatar">
                      <svg class="icon"><use xlink:href="#tabler-files"></use></svg>
                    </span>
                  </div>
                  <div class="col">
                    <div class="font-weight-medium">
                      ${stats.filesCount || 0} Files
                    </div>
                    <div class="text-muted">
                      ${formatFileSize(stats.totalFileSize || 0)}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="col-sm-6 col-lg-3">
            <div class="card card-sm">
              <div class="card-body">
                <div class="row align-items-center">
                  <div class="col-auto">
                    <span class="bg-success text-white avatar">
                      <svg class="icon"><use xlink:href="#tabler-database"></use></svg>
                    </span>
                  </div>
                  <div class="col">
                    <div class="font-weight-medium">
                      ${stats.availableModels || 0} Models
                    </div>
                    <div class="text-muted">
                      Available to you
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="col-sm-6 col-lg-3">
            <div class="card card-sm">
              <div class="card-body">
                <div class="row align-items-center">
                  <div class="col-auto">
                    <span class="bg-warning text-white avatar">
                      <svg class="icon"><use xlink:href="#tabler-activity"></use></svg>
                    </span>
                  </div>
                  <div class="col">
                    <div class="font-weight-medium">
                      ${stats.recentActivities || 0} Activities
                    </div>
                    <div class="text-muted">
                      Last 24 hours
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          ${stats.system ? `
          <div class="col-sm-6 col-lg-3">
            <div class="card card-sm">
              <div class="card-body">
                <div class="row align-items-center">
                  <div class="col-auto">
                    <span class="bg-info text-white avatar">
                      <svg class="icon"><use xlink:href="#tabler-users"></use></svg>
                    </span>
                  </div>
                  <div class="col">
                    <div class="font-weight-medium">
                      ${stats.system.totalUsers || 0} Users
                    </div>
                    <div class="text-muted">
                      System total
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          ` : ''}
        </div>
      </div>
      
      <!-- Quick Actions -->
      <div class="col-md-6 col-lg-4">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Quick Actions</h3>
          </div>
          <div class="card-body">
            <div class="divide-y">
              <div class="row py-2">
                <div class="col-auto">
                  <span class="avatar avatar-sm bg-blue-lt">
                    <svg class="icon"><use xlink:href="#tabler-upload"></use></svg>
                  </span>
                </div>
                <div class="col">
                  <div class="text-truncate">
                    <a href="/attachments/upload" class="text-reset d-block">Upload Files</a>
                    <div class="d-block text-muted text-truncate mt-n1">
                      Upload documents and media
                    </div>
                  </div>
                </div>
              </div>
              
              ${availableModels.slice(0, 3).map(model => `
              <div class="row py-2">
                <div class="col-auto">
                  <span class="avatar avatar-sm bg-${model.color}-lt">
                    <svg class="icon"><use xlink:href="#tabler-${model.icon}"></use></svg>
                  </span>
                </div>
                <div class="col">
                  <div class="text-truncate">
                    <a href="/models/${model.name}/data/new" class="text-reset d-block">Create ${model.displayName}</a>
                    <div class="d-block text-muted text-truncate mt-n1">
                      Add new ${model.displayName.toLowerCase()} record
                    </div>
                  </div>
                </div>
              </div>
              `).join('')}
              
              <div class="row py-2">
                <div class="col-auto">
                  <span class="avatar avatar-sm bg-green-lt">
                    <svg class="icon"><use xlink:href="#tabler-search"></use></svg>
                  </span>
                </div>
                <div class="col">
                  <div class="text-truncate">
                    <a href="/dashboard/search" class="text-reset d-block">Search Everything</a>
                    <div class="d-block text-muted text-truncate mt-n1">
                      Find files, records, and more
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Recent Files -->
      <div class="col-md-6 col-lg-8">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Recent Files</h3>
            <div class="card-actions">
              <a href="/attachments" class="btn btn-sm">View all</a>
            </div>
          </div>
          <div class="card-body">
            ${recentFiles.length > 0 ? `
            <div class="divide-y">
              ${recentFiles.map(file => `
              <div class="row py-2">
                <div class="col-auto">
                  <span class="avatar avatar-sm bg-${getFileTypeColor(file.extension)}">
                    <svg class="icon"><use xlink:href="#tabler-${getFileTypeIcon(file.extension)}"></use></svg>
                  </span>
                </div>
                <div class="col">
                  <div class="text-truncate">
                    <a href="/attachments/${file._id}" class="text-reset d-block">${file.originalName}</a>
                    <div class="d-block text-muted text-truncate mt-n1">
                      ${file.formattedSize} â€¢ ${formatDate(file.createdAt)}
                    </div>
                  </div>
                </div>
                <div class="col-auto">
                  <a href="/attachments/${file._id}/download" class="btn btn-ghost-secondary btn-sm">
                    <svg class="icon"><use xlink:href="#tabler-download"></use></svg>
                  </a>
                </div>
              </div>
              `).join('')}
            </div>
            ` : `
            <div class="text-center py-4 text-muted">
              <svg class="icon icon-lg mb-2"><use xlink:href="#tabler-folder-x"></use></svg>
              <div>No recent files</div>
              <div class="small">
                <a href="/attachments/upload">Upload your first file</a>
              </div>
            </div>
            `}
          </div>
        </div>
      </div>
      
      <!-- Available Models -->
      <div class="col-lg-6">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Available Models</h3>
            <div class="card-actions">
              <a href="/models" class="btn btn-sm">Manage</a>
            </div>
          </div>
          <div class="card-body">
            ${availableModels.length > 0 ? `
            <div class="row g-2">
              ${availableModels.map(model => `
              <div class="col-6">
                <a href="/models/${model.name}" class="card card-link card-link-pop">
                  <div class="card-body text-center">
                    <div class="avatar avatar-lg mb-2 bg-${model.color}-lt">
                      <svg class="icon"><use xlink:href="#tabler-${model.icon}"></use></svg>
                    </div>
                    <div class="h4 m-0">${model.recordCount || 0}</div>
                    <div class="text-muted">${model.displayName}</div>
                  </div>
                </a>
              </div>
              `).join('')}
            </div>
            ` : `
            <div class="text-center py-4 text-muted">
              <svg class="icon icon-lg mb-2"><use xlink:href="#tabler-database-x"></use></svg>
              <div>No models available</div>
              <div class="small">
                Contact your administrator for access
              </div>
            </div>
            `}
          </div>
        </div>
      </div>
      
      <!-- Recent Activities -->
      <div class="col-lg-6">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Recent Activities</h3>
            <div class="card-actions">
              <a href="/dashboard/activities" class="btn btn-sm">View all</a>
            </div>
          </div>
          <div class="card-body">
            ${recentActivities.length > 0 ? `
            <div class="list-group list-group-flush list-group-hoverable">
              ${recentActivities.map(activity => `
              <div class="list-group-item">
                <div class="row align-items-center">
                  <div class="col-auto">
                    <span class="status-dot status-dot-animated bg-${activity.color} d-block"></span>
                  </div>
                  <div class="col text-truncate">
                    <div class="text-reset d-block">${activity.description}</div>
                    <div class="d-block text-muted text-truncate mt-n1">
                      ${formatDate(activity.timestamp)}
                    </div>
                  </div>
                </div>
              </div>
              `).join('')}
            </div>
            ` : `
            <div class="text-center py-4 text-muted">
              <svg class="icon icon-lg mb-2"><use xlink:href="#tabler-activity"></use></svg>
              <div>No recent activities</div>
              <div class="small">
                Your activities will appear here
              </div>
            </div>
            `}
          </div>
        </div>
      </div>
    </div>
    
    <script>
      // Helper functions for the dashboard
      function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
      }
      
      function formatDate(dateString) {
        const date = new Date(dateString);
        const now = new Date();
        const diffTime = Math.abs(now - date);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays === 1) {
          return 'Yesterday';
        } else if (diffDays < 7) {
          return diffDays + ' days ago';
        } else {
          return date.toLocaleDateString();
        }
      }
      
      function getFileTypeIcon(extension) {
        const ext = extension.toLowerCase();
        if (['.jpg', '.jpeg', '.png', '.gif', '.webp'].includes(ext)) return 'photo';
        if (['.pdf'].includes(ext)) return 'file-text';
        if (['.doc', '.docx'].includes(ext)) return 'file-word';
        if (['.xls', '.xlsx'].includes(ext)) return 'file-excel';
        if (['.zip', '.rar'].includes(ext)) return 'file-zip';
        return 'file';
      }
      
      function getFileTypeColor(extension) {
        const ext = extension.toLowerCase();
        if (['.jpg', '.jpeg', '.png', '.gif', '.webp'].includes(ext)) return 'blue';
        if (['.pdf'].includes(ext)) return 'red';
        if (['.doc', '.docx'].includes(ext)) return 'indigo';
        if (['.xls', '.xlsx'].includes(ext)) return 'green';
        if (['.zip', '.rar'].includes(ext)) return 'yellow';
        return 'gray';
      }
      
      // Auto-refresh statistics every 30 seconds
      setInterval(function() {
        fetch('/dashboard/stats')
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Update statistics without full page reload
              console.log('Statistics updated');
            }
          })
          .catch(error => console.error('Error updating stats:', error));
      }, 30000);
    </script>
  `,
  currentPage: 'dashboard'
}) %>